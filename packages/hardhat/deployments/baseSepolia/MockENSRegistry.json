{
  "address": "0x5598B498635fE55Faaeb9AAc998446ca1B8e08ab",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "ensName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "NameRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "ensName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "NameUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getAllNames",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNameCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_ensName",
          "type": "string"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "names",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_ensName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "registerName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registeredNames",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_ensName",
          "type": "string"
        }
      ],
      "name": "resolve",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_ensName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "updateName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x53138498310837199cf6d0823a965d6a6753647d855ef4f7db69295b82f4c359",
  "receipt": {
    "to": null,
    "from": "0x8B6E5E7D4116f766BF1BE714FCc8bcAfA23D32D2",
    "contractAddress": "0x5598B498635fE55Faaeb9AAc998446ca1B8e08ab",
    "transactionIndex": 24,
    "gasUsed": "723811",
    "logsBloom": "0x
    "blockHash": "0xc6fb78f79cca715e5d2627481d8f3883b3c325d00a99cc51d14ee744cb9e8d6e",
    "transactionHash": "0x53138498310837199cf6d0823a965d6a6753647d855ef4f7db69295b82f4c359",
    "logs": [],
    "blockNumber": 32539872,
    "cumulativeGasUsed": "4000916",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "459bc7e06c7b815b6a7deff5cf596786",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ensName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"NameRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ensName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"NameUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAllNames\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNameCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ensName\",\"type\":\"string\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"names\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ensName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"registerName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ensName\",\"type\":\"string\"}],\"name\":\"resolve\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ensName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"updateName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"MockENSRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAllNames()\":{\"notice\":\"Get all registered names\"},\"getNameCount()\":{\"notice\":\"Get registered name count\"},\"isRegistered(string)\":{\"notice\":\"Check if a name is registered\"},\"registerName(string,address)\":{\"notice\":\"Register a name\"},\"resolve(string)\":{\"notice\":\"Resolve a name to an address\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership\"},\"updateName(string,address)\":{\"notice\":\"Update an existing name\"}},\"notice\":\"Simple ENS-like registry mapping names to addresses\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockENSRegistry.sol\":\"MockENSRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MockENSRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\n/**\\n * @title MockENSRegistry\\n * @notice Simple ENS-like registry mapping names to addresses\\n */\\ncontract MockENSRegistry {\\n    \\n    // ==================== STATE ====================\\n    \\n    address public owner;\\n    \\n    mapping(string => address) public names; // ensName => contract address\\n    string[] public registeredNames;\\n    \\n    // ==================== EVENTS ====================\\n    \\n    event NameRegistered(string ensName, address contractAddress);\\n    event NameUpdated(string ensName, address newAddress);\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    \\n    // ==================== MODIFIERS ====================\\n    \\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only owner\\\");\\n        _;\\n    }\\n    \\n    // ==================== CONSTRUCTOR ====================\\n    \\n    constructor() {\\n        owner = msg.sender;\\n    }\\n    \\n    // ==================== FUNCTIONS ====================\\n    \\n    /**\\n     * @notice Register a name\\n     */\\n    function registerName(string memory _ensName, address _address) \\n        external \\n        onlyOwner \\n    {\\n        require(_address != address(0), \\\"Invalid address\\\");\\n        require(names[_ensName] == address(0), \\\"Name already registered\\\");\\n        \\n        names[_ensName] = _address;\\n        registeredNames.push(_ensName);\\n        \\n        emit NameRegistered(_ensName, _address);\\n    }\\n    \\n    /**\\n     * @notice Update an existing name\\n     */\\n    function updateName(string memory _ensName, address _newAddress) \\n        external \\n        onlyOwner \\n    {\\n        require(_newAddress != address(0), \\\"Invalid address\\\");\\n        require(names[_ensName] != address(0), \\\"Name not registered\\\");\\n        \\n        names[_ensName] = _newAddress;\\n        \\n        emit NameUpdated(_ensName, _newAddress);\\n    }\\n    \\n    /**\\n     * @notice Resolve a name to an address\\n     */\\n    function resolve(string memory _ensName) \\n        external \\n        view \\n        returns (address) \\n    {\\n        address resolved = names[_ensName];\\n        require(resolved != address(0), \\\"Name not found\\\");\\n        return resolved;\\n    }\\n    \\n    /**\\n     * @notice Check if a name is registered\\n     */\\n    function isRegistered(string memory _ensName) \\n        external \\n        view \\n        returns (bool) \\n    {\\n        return names[_ensName] != address(0);\\n    }\\n    \\n    /**\\n     * @notice Get all registered names\\n     */\\n    function getAllNames() external view returns (string[] memory) {\\n        return registeredNames;\\n    }\\n    \\n    /**\\n     * @notice Get registered name count\\n     */\\n    function getNameCount() external view returns (uint256) {\\n        return registeredNames.length;\\n    }\\n    \\n    /**\\n     * @notice Transfer ownership\\n     */\\n    function transferOwnership(address newOwner) external onlyOwner {\\n        require(newOwner != address(0), \\\"Invalid address\\\");\\n        address oldOwner = owner;\\n        owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\",\"keccak256\":\"0x48611d050051d93d364ac444ac2a9e8319cfbac05bab7c32584b68899a17cf8b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610bb9806100326000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063822fbf5811610066578063822fbf581461012c5780638da5cb5b14610160578063c822d7f014610173578063f2fde38b14610196578063fb825e5f146101a957600080fd5b80630d6e1b65146100a35780631d4b0c09146100b857806337c6e932146100ce578063461a4478146100ee5780637b59af1614610119575b600080fd5b6100b66100b136600461081c565b6101be565b005b6002546040519081526020015b60405180910390f35b6100e16100dc36600461086a565b61030a565b6040516100c591906108d3565b6101016100fc3660046108ed565b6103b6565b6040516001600160a01b0390911681526020016100c5565b6100b661012736600461081c565b610428565b61010161013a3660046108ed565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b600054610101906001600160a01b031681565b6101866101813660046108ed565b6105a7565b60405190151581526020016100c5565b6100b66101a436600461092a565b6105e4565b6101b1610684565b6040516100c59190610945565b6000546001600160a01b031633146101f15760405162461bcd60e51b81526004016101e8906109a7565b60405180910390fd5b6001600160a01b0381166102175760405162461bcd60e51b81526004016101e8906109cb565b60006001600160a01b031660018360405161023291906109f4565b908152604051908190036020019020546001600160a01b03160361028e5760405162461bcd60e51b815260206004820152601360248201527213985b59481b9bdd081c9959da5cdd195c9959606a1b60448201526064016101e8565b8060018360405161029f91906109f4565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f20e318a79d6993b8f81a843a23667dc1d069920c1f36e62a36d3979a129469d2906102fe9084908490610a10565b60405180910390a15050565b6002818154811061031a57600080fd5b90600052602060002001600091509050805461033590610a3a565b80601f016020809104026020016040519081016040528092919081815260200182805461036190610a3a565b80156103ae5780601f10610383576101008083540402835291602001916103ae565b820191906000526020600020905b81548152906001019060200180831161039157829003601f168201915b505050505081565b6000806001836040516103c991906109f4565b908152604051908190036020019020546001600160a01b03169050806104225760405162461bcd60e51b815260206004820152600e60248201526d13985b59481b9bdd08199bdd5b9960921b60448201526064016101e8565b92915050565b6000546001600160a01b031633146104525760405162461bcd60e51b81526004016101e8906109a7565b6001600160a01b0381166104785760405162461bcd60e51b81526004016101e8906109cb565b60006001600160a01b031660018360405161049391906109f4565b908152604051908190036020019020546001600160a01b0316146104f95760405162461bcd60e51b815260206004820152601760248201527f4e616d6520616c7265616479207265676973746572656400000000000000000060448201526064016101e8565b8060018360405161050a91906109f4565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace016105758382610ac3565b507f1c6eac0e720ec22bb0653aec9c19985633a4fb07971cf973096c2f8e3c37c17f82826040516102fe929190610a10565b6000806001600160a01b03166001836040516105c391906109f4565b908152604051908190036020019020546001600160a01b0316141592915050565b6000546001600160a01b0316331461060e5760405162461bcd60e51b81526004016101e8906109a7565b6001600160a01b0381166106345760405162461bcd60e51b81526004016101e8906109cb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156107545783829060005260206000200180546106c790610a3a565b80601f01602080910402602001604051908101604052809291908181526020018280546106f390610a3a565b80156107405780601f1061071557610100808354040283529160200191610740565b820191906000526020600020905b81548152906001019060200180831161072357829003601f168201915b5050505050815260200190600101906106a8565b50505050905090565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261078457600080fd5b813567ffffffffffffffff8082111561079f5761079f61075d565b604051601f8301601f19908116603f011681019082821181831017156107c7576107c761075d565b816040528381528660208588010111156107e057600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b038116811461081757600080fd5b919050565b6000806040838503121561082f57600080fd5b823567ffffffffffffffff81111561084657600080fd5b61085285828601610773565b92505061086160208401610800565b90509250929050565b60006020828403121561087c57600080fd5b5035919050565b60005b8381101561089e578181015183820152602001610886565b50506000910152565b600081518084526108bf816020860160208601610883565b601f01601f19169290920160200192915050565b6020815260006108e660208301846108a7565b9392505050565b6000602082840312156108ff57600080fd5b813567ffffffffffffffff81111561091657600080fd5b61092284828501610773565b949350505050565b60006020828403121561093c57600080fd5b6108e682610800565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561099a57603f198886030184526109888583516108a7565b9450928501929085019060010161096c565b5092979650505050505050565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b60008251610a06818460208701610883565b9190910192915050565b604081526000610a2360408301856108a7565b905060018060a01b03831660208301529392505050565b600181811c90821680610a4e57607f821691505b602082108103610a6e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610abe57600081815260208120601f850160051c81016020861015610a9b5750805b601f850160051c820191505b81811015610aba57828155600101610aa7565b5050505b505050565b815167ffffffffffffffff811115610add57610add61075d565b610af181610aeb8454610a3a565b84610a74565b602080601f831160018114610b265760008415610b0e5750858301515b600019600386901b1c1916600185901b178555610aba565b600085815260208120601f198616915b82811015610b5557888601518255948401946001909101908401610b36565b5085821015610b735787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212202789981969d44ddb1a6b1657fb727eeb0e389d09220a6b0e429d28c6a6eea36a64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063822fbf5811610066578063822fbf581461012c5780638da5cb5b14610160578063c822d7f014610173578063f2fde38b14610196578063fb825e5f146101a957600080fd5b80630d6e1b65146100a35780631d4b0c09146100b857806337c6e932146100ce578063461a4478146100ee5780637b59af1614610119575b600080fd5b6100b66100b136600461081c565b6101be565b005b6002546040519081526020015b60405180910390f35b6100e16100dc36600461086a565b61030a565b6040516100c591906108d3565b6101016100fc3660046108ed565b6103b6565b6040516001600160a01b0390911681526020016100c5565b6100b661012736600461081c565b610428565b61010161013a3660046108ed565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b600054610101906001600160a01b031681565b6101866101813660046108ed565b6105a7565b60405190151581526020016100c5565b6100b66101a436600461092a565b6105e4565b6101b1610684565b6040516100c59190610945565b6000546001600160a01b031633146101f15760405162461bcd60e51b81526004016101e8906109a7565b60405180910390fd5b6001600160a01b0381166102175760405162461bcd60e51b81526004016101e8906109cb565b60006001600160a01b031660018360405161023291906109f4565b908152604051908190036020019020546001600160a01b03160361028e5760405162461bcd60e51b815260206004820152601360248201527213985b59481b9bdd081c9959da5cdd195c9959606a1b60448201526064016101e8565b8060018360405161029f91906109f4565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f20e318a79d6993b8f81a843a23667dc1d069920c1f36e62a36d3979a129469d2906102fe9084908490610a10565b60405180910390a15050565b6002818154811061031a57600080fd5b90600052602060002001600091509050805461033590610a3a565b80601f016020809104026020016040519081016040528092919081815260200182805461036190610a3a565b80156103ae5780601f10610383576101008083540402835291602001916103ae565b820191906000526020600020905b81548152906001019060200180831161039157829003601f168201915b505050505081565b6000806001836040516103c991906109f4565b908152604051908190036020019020546001600160a01b03169050806104225760405162461bcd60e51b815260206004820152600e60248201526d13985b59481b9bdd08199bdd5b9960921b60448201526064016101e8565b92915050565b6000546001600160a01b031633146104525760405162461bcd60e51b81526004016101e8906109a7565b6001600160a01b0381166104785760405162461bcd60e51b81526004016101e8906109cb565b60006001600160a01b031660018360405161049391906109f4565b908152604051908190036020019020546001600160a01b0316146104f95760405162461bcd60e51b815260206004820152601760248201527f4e616d6520616c7265616479207265676973746572656400000000000000000060448201526064016101e8565b8060018360405161050a91906109f4565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace016105758382610ac3565b507f1c6eac0e720ec22bb0653aec9c19985633a4fb07971cf973096c2f8e3c37c17f82826040516102fe929190610a10565b6000806001600160a01b03166001836040516105c391906109f4565b908152604051908190036020019020546001600160a01b0316141592915050565b6000546001600160a01b0316331461060e5760405162461bcd60e51b81526004016101e8906109a7565b6001600160a01b0381166106345760405162461bcd60e51b81526004016101e8906109cb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156107545783829060005260206000200180546106c790610a3a565b80601f01602080910402602001604051908101604052809291908181526020018280546106f390610a3a565b80156107405780601f1061071557610100808354040283529160200191610740565b820191906000526020600020905b81548152906001019060200180831161072357829003601f168201915b5050505050815260200190600101906106a8565b50505050905090565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261078457600080fd5b813567ffffffffffffffff8082111561079f5761079f61075d565b604051601f8301601f19908116603f011681019082821181831017156107c7576107c761075d565b816040528381528660208588010111156107e057600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b038116811461081757600080fd5b919050565b6000806040838503121561082f57600080fd5b823567ffffffffffffffff81111561084657600080fd5b61085285828601610773565b92505061086160208401610800565b90509250929050565b60006020828403121561087c57600080fd5b5035919050565b60005b8381101561089e578181015183820152602001610886565b50506000910152565b600081518084526108bf816020860160208601610883565b601f01601f19169290920160200192915050565b6020815260006108e660208301846108a7565b9392505050565b6000602082840312156108ff57600080fd5b813567ffffffffffffffff81111561091657600080fd5b61092284828501610773565b949350505050565b60006020828403121561093c57600080fd5b6108e682610800565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561099a57603f198886030184526109888583516108a7565b9450928501929085019060010161096c565b5092979650505050505050565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b60008251610a06818460208701610883565b9190910192915050565b604081526000610a2360408301856108a7565b905060018060a01b03831660208301529392505050565b600181811c90821680610a4e57607f821691505b602082108103610a6e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610abe57600081815260208120601f850160051c81016020861015610a9b5750805b601f850160051c820191505b81811015610aba57828155600101610aa7565b5050505b505050565b815167ffffffffffffffff811115610add57610add61075d565b610af181610aeb8454610a3a565b84610a74565b602080601f831160018114610b265760008415610b0e5750858301515b600019600386901b1c1916600185901b178555610aba565b600085815260208120601f198616915b82811015610b5557888601518255948401946001909101908401610b36565b5085821015610b735787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212202789981969d44ddb1a6b1657fb727eeb0e389d09220a6b0e429d28c6a6eea36a64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "MockENSRegistry",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getAllNames()": {
        "notice": "Get all registered names"
      },
      "getNameCount()": {
        "notice": "Get registered name count"
      },
      "isRegistered(string)": {
        "notice": "Check if a name is registered"
      },
      "registerName(string,address)": {
        "notice": "Register a name"
      },
      "resolve(string)": {
        "notice": "Resolve a name to an address"
      },
      "transferOwnership(address)": {
        "notice": "Transfer ownership"
      },
      "updateName(string,address)": {
        "notice": "Update an existing name"
      }
    },
    "notice": "Simple ENS-like registry mapping names to addresses",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 675,
        "contract": "contracts/MockENSRegistry.sol:MockENSRegistry",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 679,
        "contract": "contracts/MockENSRegistry.sol:MockENSRegistry",
        "label": "names",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 682,
        "contract": "contracts/MockENSRegistry.sol:MockENSRegistry",
        "label": "registeredNames",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_string_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}