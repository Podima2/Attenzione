{
  "address": "0x41a479d7a8B0E8fEA445d0e454FD614F191Be997",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "reportId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "stationId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "severity",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "cid",
          "type": "string"
        }
      ],
      "name": "AnonymousReportSubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "reportId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "stationId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "reporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "severity",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "cid",
          "type": "string"
        }
      ],
      "name": "CrimeReportSubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "stationId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metro",
          "type": "string"
        }
      ],
      "name": "StationCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "stationId",
          "type": "string"
        }
      ],
      "name": "StationUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_stationId",
          "type": "string"
        }
      ],
      "name": "activateStation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_stationId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_metro",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_lines",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_lineOrder",
          "type": "uint256"
        }
      ],
      "name": "createStation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_stationId",
          "type": "string"
        }
      ],
      "name": "deactivateStation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllStations",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "id",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "metro",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "lines",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "lineOrder",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct CrimeRegistry.Station[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reportId",
          "type": "uint256"
        }
      ],
      "name": "getReport",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "stationId",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "reporter",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "severity",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ],
          "internalType": "struct CrimeRegistry.CrimeReport",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_stationId",
          "type": "string"
        }
      ],
      "name": "getStation",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "id",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "metro",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "lines",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "lineOrder",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct CrimeRegistry.Station",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStationCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_stationId",
          "type": "string"
        }
      ],
      "name": "getStationReportCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_stationId",
          "type": "string"
        }
      ],
      "name": "getStationReports",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "stationId",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "reporter",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "severity",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ],
          "internalType": "struct CrimeRegistry.CrimeReport[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalReportCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastReportTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reportCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "reportCountToday",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reports",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "stationId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "reporter",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "severity",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "stationExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stationIds",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stationReports",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "stations",
      "outputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "metro",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "lines",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "lineOrder",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_stationId",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_severity",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_cid",
          "type": "string"
        }
      ],
      "name": "submitAnonymousReport",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_stationId",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_severity",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_cid",
          "type": "string"
        }
      ],
      "name": "submitVerifiedReport",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1fa28ae22cb9c06a1659e4a04fdfe31e6f2a6c4f1a3af4c3011d0a2e2d51a8ab",
  "receipt": {
    "to": null,
    "from": "0x8B6E5E7D4116f766BF1BE714FCc8bcAfA23D32D2",
    "contractAddress": "0x41a479d7a8B0E8fEA445d0e454FD614F191Be997",
    "transactionIndex": 17,
    "gasUsed": "2254718",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xa13c57d245c45a3ffa33888ce582b962e4b58293bfdd2d09c636c5fdb8785893",
    "transactionHash": "0x1fa28ae22cb9c06a1659e4a04fdfe31e6f2a6c4f1a3af4c3011d0a2e2d51a8ab",
    "logs": [],
    "blockNumber": 32539798,
    "cumulativeGasUsed": "5591699",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "459bc7e06c7b815b6a7deff5cf596786",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"reportId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stationId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"severity\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"AnonymousReportSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"reportId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stationId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"severity\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"CrimeReportSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stationId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metro\",\"type\":\"string\"}],\"name\":\"StationCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"stationId\",\"type\":\"string\"}],\"name\":\"StationUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_stationId\",\"type\":\"string\"}],\"name\":\"activateStation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_stationId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_metro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_lines\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_lineOrder\",\"type\":\"uint256\"}],\"name\":\"createStation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_stationId\",\"type\":\"string\"}],\"name\":\"deactivateStation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllStations\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lines\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lineOrder\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct CrimeRegistry.Station[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reportId\",\"type\":\"uint256\"}],\"name\":\"getReport\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"stationId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"severity\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct CrimeRegistry.CrimeReport\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_stationId\",\"type\":\"string\"}],\"name\":\"getStation\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lines\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lineOrder\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct CrimeRegistry.Station\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStationCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_stationId\",\"type\":\"string\"}],\"name\":\"getStationReportCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_stationId\",\"type\":\"string\"}],\"name\":\"getStationReports\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"stationId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"severity\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct CrimeRegistry.CrimeReport[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalReportCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastReportTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reportCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reportCountToday\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reports\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"stationId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"severity\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"stationExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stationIds\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stationReports\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"stations\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lines\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lineOrder\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_stationId\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_severity\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_cid\",\"type\":\"string\"}],\"name\":\"submitAnonymousReport\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_stationId\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_severity\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_cid\",\"type\":\"string\"}],\"name\":\"submitVerifiedReport\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Designed for The Graph indexing and cross-metro analysis\",\"kind\":\"dev\",\"methods\":{\"createStation(string,string,string,string,uint256)\":{\"params\":{\"_lineOrder\":\"Order on the primary line for visualization\",\"_lines\":\"Comma-separated line codes (e.g., \\\"A,B,C\\\")\",\"_metro\":\"Metro system identifier (e.g., \\\"rome\\\")\",\"_name\":\"Human-readable station name\",\"_stationId\":\"Unique identifier (e.g., \\\"termini-rome\\\")\"}},\"submitAnonymousReport(string,uint8,string,string)\":{\"details\":\"Only owner (backend relayer) can call this for anonymous reportsThis is for guest reports where you (the owner) pay the gas\",\"params\":{\"_cid\":\"IPFS CID of the report\",\"_description\":\"Report description\",\"_severity\":\"Severity level 0-10\",\"_stationId\":\"Station identifier\"}},\"submitVerifiedReport(string,uint8,string,string)\":{\"params\":{\"_cid\":\"IPFS CID of the report\",\"_description\":\"Report description\",\"_severity\":\"Severity level 0-10\",\"_stationId\":\"Station identifier\"}}},\"title\":\"CrimeRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activateStation(string)\":{\"notice\":\"Reactivate a station\"},\"createStation(string,string,string,string,uint256)\":{\"notice\":\"Create a new metro station\"},\"deactivateStation(string)\":{\"notice\":\"Deactivate a station (soft delete)\"},\"getAllStations()\":{\"notice\":\"Get all stations\"},\"getReport(uint256)\":{\"notice\":\"Get a specific report\"},\"getStation(string)\":{\"notice\":\"Get a specific station\"},\"getStationCount()\":{\"notice\":\"Get total number of stations\"},\"getStationReportCount(string)\":{\"notice\":\"Get number of reports for a station\"},\"getStationReports(string)\":{\"notice\":\"Get all reports for a station\"},\"getTotalReportCount()\":{\"notice\":\"Get total number of reports\"},\"submitAnonymousReport(string,uint8,string,string)\":{\"notice\":\"Submit an anonymous crime report (backend/relayer pays gas)\"},\"submitVerifiedReport(string,uint8,string,string)\":{\"notice\":\"Submit a verified crime report (user pays gas, signed by reporter)\"}},\"notice\":\"Smart contract for recording and managing crime reports across metro systems\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrimeRegistry.sol\":\"CrimeRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CrimeRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\n/**\\n * @title CrimeRegistry\\n * @notice Smart contract for recording and managing crime reports across metro systems\\n * @dev Designed for The Graph indexing and cross-metro analysis\\n */\\n\\ncontract CrimeRegistry {\\n    \\n    // ==================== STRUCTS ====================\\n    \\n    struct Station {\\n        string id;                    // e.g., \\\"termini-rome\\\"\\n        string name;                  // Human readable name\\n        string metro;                 // e.g., \\\"rome\\\"\\n        string lines;                 // Comma-separated lines (e.g., \\\"A,B,C\\\")\\n        uint256 lineOrder;            // Order on the line (for visualization)\\n        bool active;\\n        uint256 createdAt;\\n    }\\n    \\n    struct CrimeReport {\\n        uint256 id;\\n        string stationId;\\n        address reporter;             // Address(0) for anonymous\\n        uint8 severity;               // 0-10 scale\\n        string description;\\n        uint256 timestamp;\\n        bool verified;                // true if user paid gas themselves\\n    }\\n    \\n    // ==================== STATE VARIABLES ====================\\n    \\n    address public owner;\\n    \\n    // Station storage\\n    mapping(string => Station) public stations;           // stationId => Station\\n    mapping(string => bool) public stationExists;\\n    string[] public stationIds;\\n    \\n    // Crime reports storage\\n    mapping(uint256 => CrimeReport) public reports;       // reportId => CrimeReport\\n    mapping(string => uint256[]) public stationReports;   // stationId => reportIds\\n    uint256 public reportCount;\\n    \\n    // Rate limiting for anonymous reports\\n    mapping(address => uint256) public lastReportTime;    // ip/address => timestamp\\n    mapping(address => uint256) public reportCountToday;  // ip/address => count\\n    \\n    // ==================== EVENTS ====================\\n    \\n    event StationCreated(\\n        string stationId,\\n        string name,\\n        string metro\\n    );\\n    \\n    event StationUpdated(string indexed stationId);\\n    \\n    event CrimeReportSubmitted(\\n        uint256 indexed reportId,\\n        string stationId,\\n        address indexed reporter,\\n        uint8 severity,\\n        uint256 timestamp,\\n        bool verified,\\n        string cid\\n    );\\n    \\n    event AnonymousReportSubmitted(\\n        uint256 indexed reportId,\\n        string stationId,\\n        uint8 severity,\\n        uint256 timestamp,\\n        string cid\\n    );\\n    \\n    // ==================== MODIFIERS ====================\\n    \\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only owner can call this\\\");\\n        _;\\n    }\\n    \\n    modifier stationMustExist(string memory _stationId) {\\n        require(stationExists[_stationId], \\\"Station does not exist\\\");\\n        _;\\n    }\\n    \\n    modifier validSeverity(uint8 _severity) {\\n        require(_severity >= 0 && _severity <= 10, \\\"Severity must be 0-10\\\");\\n        _;\\n    }\\n    \\n    modifier validDescription(string memory _description) {\\n        bytes memory descBytes = bytes(_description);\\n        require(descBytes.length >= 5 && descBytes.length <= 500, \\\"Description must be 5-500 chars\\\");\\n        _;\\n    }\\n    \\n    modifier rateLimit(address _address) {\\n        uint256 timeSinceLastReport = block.timestamp - lastReportTime[_address];\\n        require(timeSinceLastReport >= 5 minutes, \\\"Rate limit: wait 5 mins between reports\\\");\\n        _;\\n    }\\n    \\n    // ==================== CONSTRUCTOR ====================\\n    \\n    constructor() {\\n        owner = msg.sender;\\n        reportCount = 0;\\n    }\\n    \\n    // ==================== STATION MANAGEMENT ====================\\n    \\n    /**\\n     * @notice Create a new metro station\\n     * @param _stationId Unique identifier (e.g., \\\"termini-rome\\\")\\n     * @param _name Human-readable station name\\n     * @param _metro Metro system identifier (e.g., \\\"rome\\\")\\n     * @param _lines Comma-separated line codes (e.g., \\\"A,B,C\\\")\\n     * @param _lineOrder Order on the primary line for visualization\\n     */\\n    function createStation(\\n        string memory _stationId,\\n        string memory _name,\\n        string memory _metro,\\n        string memory _lines,\\n        uint256 _lineOrder\\n    ) external onlyOwner {\\n        require(!stationExists[_stationId], \\\"Station already exists\\\");\\n        require(bytes(_stationId).length > 0, \\\"Station ID cannot be empty\\\");\\n        \\n        stations[_stationId] = Station({\\n            id: _stationId,\\n            name: _name,\\n            metro: _metro,\\n            lines: _lines,\\n            lineOrder: _lineOrder,\\n            active: true,\\n            createdAt: block.timestamp\\n        });\\n        \\n        stationExists[_stationId] = true;\\n        stationIds.push(_stationId);\\n        \\n        emit StationCreated(_stationId, _name, _metro);\\n    }\\n    \\n    /**\\n     * @notice Deactivate a station (soft delete)\\n     */\\n    function deactivateStation(string memory _stationId) \\n        external \\n        onlyOwner \\n        stationMustExist(_stationId) \\n    {\\n        stations[_stationId].active = false;\\n        emit StationUpdated(_stationId);\\n    }\\n    \\n    /**\\n     * @notice Reactivate a station\\n     */\\n    function activateStation(string memory _stationId) \\n        external \\n        onlyOwner \\n        stationMustExist(_stationId) \\n    {\\n        stations[_stationId].active = true;\\n        emit StationUpdated(_stationId);\\n    }\\n    \\n    // ==================== CRIME REPORTING ====================\\n    \\n    /**\\n     * @notice Submit a verified crime report (user pays gas, signed by reporter)\\n     * @param _stationId Station identifier\\n     * @param _severity Severity level 0-10\\n     * @param _description Report description\\n     * @param _cid IPFS CID of the report\\n     */\\n    function submitVerifiedReport(\\n        string memory _stationId,\\n        uint8 _severity,\\n        string memory _description,\\n        string memory _cid\\n    ) \\n        external \\n        stationMustExist(_stationId)\\n        validSeverity(_severity)\\n        validDescription(_description)\\n        returns (uint256)\\n    {\\n        require(stations[_stationId].active, \\\"Station is not active\\\");\\n        \\n        uint256 reportId = reportCount;\\n        reportCount++;\\n        \\n        CrimeReport memory newReport = CrimeReport({\\n            id: reportId,\\n            stationId: _stationId,\\n            reporter: msg.sender,\\n            severity: _severity,\\n            description: _description,\\n            timestamp: block.timestamp,\\n            verified: true\\n        });\\n        \\n        reports[reportId] = newReport;\\n        stationReports[_stationId].push(reportId);\\n        \\n        emit CrimeReportSubmitted(\\n            reportId,\\n            _stationId,\\n            msg.sender,\\n            _severity,\\n            block.timestamp,\\n            true,\\n            _cid\\n        );\\n        \\n        return reportId;\\n    }\\n    \\n    /**\\n     * @notice Submit an anonymous crime report (backend/relayer pays gas)\\n     * @param _stationId Station identifier\\n     * @param _severity Severity level 0-10\\n     * @param _description Report description\\n     * @param _cid IPFS CID of the report\\n     * @dev Only owner (backend relayer) can call this for anonymous reports\\n     * @dev This is for guest reports where you (the owner) pay the gas\\n     */\\n    function submitAnonymousReport(\\n        string memory _stationId,\\n        uint8 _severity,\\n        string memory _description,\\n        string memory _cid\\n    ) \\n        external \\n        onlyOwner\\n        stationMustExist(_stationId)\\n        validSeverity(_severity)\\n        validDescription(_description)\\n        returns (uint256)\\n    {\\n        require(stations[_stationId].active, \\\"Station is not active\\\");\\n        \\n        uint256 reportId = reportCount;\\n        reportCount++;\\n        \\n        CrimeReport memory newReport = CrimeReport({\\n            id: reportId,\\n            stationId: _stationId,\\n            reporter: address(0),                // Anonymous\\n            severity: _severity,\\n            description: _description,\\n            timestamp: block.timestamp,\\n            verified: false\\n        });\\n        \\n        reports[reportId] = newReport;\\n        stationReports[_stationId].push(reportId);\\n        \\n        emit AnonymousReportSubmitted(\\n            reportId,\\n            _stationId,\\n            _severity,\\n            block.timestamp,\\n            _cid\\n        );\\n        \\n        return reportId;\\n    }\\n    \\n    // ==================== QUERIES ====================\\n    \\n    /**\\n     * @notice Get all stations\\n     */\\n    function getAllStations() \\n        external \\n        view \\n        returns (Station[] memory) \\n    {\\n        Station[] memory allStations = new Station[](stationIds.length);\\n        for (uint256 i = 0; i < stationIds.length; i++) {\\n            allStations[i] = stations[stationIds[i]];\\n        }\\n        return allStations;\\n    }\\n    \\n    /**\\n     * @notice Get a specific station\\n     */\\n    function getStation(string memory _stationId) \\n        external \\n        view \\n        stationMustExist(_stationId)\\n        returns (Station memory) \\n    {\\n        return stations[_stationId];\\n    }\\n    \\n    /**\\n     * @notice Get all reports for a station\\n     */\\n    function getStationReports(string memory _stationId) \\n        external \\n        view \\n        stationMustExist(_stationId)\\n        returns (CrimeReport[] memory) \\n    {\\n        uint256[] memory reportIds = stationReports[_stationId];\\n        CrimeReport[] memory stationCrimeReports = new CrimeReport[](reportIds.length);\\n        \\n        for (uint256 i = 0; i < reportIds.length; i++) {\\n            stationCrimeReports[i] = reports[reportIds[i]];\\n        }\\n        \\n        return stationCrimeReports;\\n    }\\n    \\n    /**\\n     * @notice Get a specific report\\n     */\\n    function getReport(uint256 _reportId) \\n        external \\n        view \\n        returns (CrimeReport memory) \\n    {\\n        require(_reportId < reportCount, \\\"Report does not exist\\\");\\n        return reports[_reportId];\\n    }\\n    \\n    /**\\n     * @notice Get number of reports for a station\\n     */\\n    function getStationReportCount(string memory _stationId) \\n        external \\n        view \\n        stationMustExist(_stationId)\\n        returns (uint256) \\n    {\\n        return stationReports[_stationId].length;\\n    }\\n    \\n    /**\\n     * @notice Get total number of stations\\n     */\\n    function getStationCount() \\n        external \\n        view \\n        returns (uint256) \\n    {\\n        return stationIds.length;\\n    }\\n    \\n    /**\\n     * @notice Get total number of reports\\n     */\\n    function getTotalReportCount() \\n        external \\n        view \\n        returns (uint256) \\n    {\\n        return reportCount;\\n    }\\n}\",\"keccak256\":\"0x04b3eab634bb5fd825499ec0e4515456051ccedc4abfe37a6b3bd349810b6ec8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317815560065561275c806100356000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80637450b09a116100b8578063cea30d481161007c578063cea30d48146102c0578063cef6f86b146102d3578063dbf0fc68146102f3578063e391daf914610313578063efd64c9614610333578063fe9ba20a1461035957600080fd5b80637450b09a1461023657806377b0594314610249578063803549c01461025c5780638da5cb5b1461026f578063c942adf71461029a57600080fd5b80634dcf743b116100ff5780634dcf743b146101a85780634e7f9b19146101b057806351c074e9146101d05780636258f1c11461020e578063656f9d061461021657600080fd5b80631265b2541461013c578063185c6f84146101515780632118f9c41461016d578063288d0c56146101825780634cfec6bb14610195575b600080fd5b61014f61014a366004611eab565b610379565b005b61015a60065481565b6040519081526020015b60405180910390f35b6101756105ea565b604051610164919061203f565b61015a6101903660046120a1565b610977565b61014f6101a3366004612144565b610c5d565b60035461015a565b6101c36101be366004612181565b610d3b565b6040516101649190612214565b6101fe6101de366004612144565b805160208183018101805160028252928201919093012091525460ff1681565b6040519015158152602001610164565b60065461015a565b61015a61022436600461222e565b60086020526000908152604090205481565b61014f610244366004612144565b610f1f565b61015a610257366004612257565b610f9b565b61015a61026a3660046120a1565b610fdb565b600054610282906001600160a01b031681565b6040516001600160a01b039091168152602001610164565b6102ad6102a8366004612181565b6112cb565b604051610164979695949392919061229c565b61015a6102ce366004612144565b61142c565b6102e66102e1366004612144565b611496565b60405161016491906122fb565b61015a61030136600461222e565b60076020526000908152604090205481565b610326610321366004612181565b611788565b6040516101649190612350565b610346610341366004612144565b611834565b6040516101649796959493929190612363565b61036c610367366004612144565b611a9f565b60405161016491906123d0565b6000546001600160a01b031633146103ac5760405162461bcd60e51b81526004016103a3906123e3565b60405180910390fd5b6002856040516103bc919061241a565b9081526040519081900360200190205460ff16156104155760405162461bcd60e51b815260206004820152601660248201527553746174696f6e20616c72656164792065786973747360501b60448201526064016103a3565b60008551116104665760405162461bcd60e51b815260206004820152601a60248201527f53746174696f6e2049442063616e6e6f7420626520656d70747900000000000060448201526064016103a3565b6040518060e00160405280868152602001858152602001848152602001838152602001828152602001600115158152602001428152506001866040516104ac919061241a565b908152604051908190036020019020815181906104c990826124b9565b50602082015160018201906104de90826124b9565b50604082015160028201906104f390826124b9565b506060820151600382019061050890826124b9565b506080820151600482015560a082015160058201805460ff191691151591909117905560c09091015160069091015560405160019060029061054b90889061241a565b908152604051908190036020019020805491151560ff19909216919091179055600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b016105a786826124b9565b507fdaf69adeca2af28a81a080baaebb673a8432cc079f90a21c3249abce592be4898585856040516105db93929190612579565b60405180910390a15050505050565b60035460609060009067ffffffffffffffff81111561060b5761060b611e08565b60405190808252806020026020018201604052801561067e57816020015b61066b6040518060e001604052806060815260200160608152602001606081526020016060815260200160008152602001600015158152602001600081525090565b8152602001906001900390816106295790505b50905060005b600354811015610971576001600382815481106106a3576106a36125bc565b906000526020600020016040516106ba91906125d2565b90815260200160405180910390206040518060e00160405290816000820180546106e390612436565b80601f016020809104026020016040519081016040528092919081815260200182805461070f90612436565b801561075c5780601f106107315761010080835404028352916020019161075c565b820191906000526020600020905b81548152906001019060200180831161073f57829003601f168201915b5050505050815260200160018201805461077590612436565b80601f01602080910402602001604051908101604052809291908181526020018280546107a190612436565b80156107ee5780601f106107c3576101008083540402835291602001916107ee565b820191906000526020600020905b8154815290600101906020018083116107d157829003601f168201915b5050505050815260200160028201805461080790612436565b80601f016020809104026020016040519081016040528092919081815260200182805461083390612436565b80156108805780601f1061085557610100808354040283529160200191610880565b820191906000526020600020905b81548152906001019060200180831161086357829003601f168201915b5050505050815260200160038201805461089990612436565b80601f01602080910402602001604051908101604052809291908181526020018280546108c590612436565b80156109125780601f106108e757610100808354040283529160200191610912565b820191906000526020600020905b8154815290600101906020018083116108f557829003601f168201915b505050918352505060048201546020820152600582015460ff16151560408201526006909101546060909101528251839083908110610953576109536125bc565b6020026020010181905250808061096990612648565b915050610684565b50919050565b60008460028160405161098a919061241a565b9081526040519081900360200190205460ff166109b95760405162461bcd60e51b81526004016103a39061266f565b84600a8160ff161115610a065760405162461bcd60e51b815260206004820152601560248201527405365766572697479206d75737420626520302d313605c1b60448201526064016103a3565b8460008190506005815110158015610a2157506101f4815111155b610a6d5760405162461bcd60e51b815260206004820152601f60248201527f4465736372697074696f6e206d75737420626520352d3530302063686172730060448201526064016103a3565b600189604051610a7d919061241a565b9081526040519081900360200190206005015460ff16610ad75760405162461bcd60e51b815260206004820152601560248201527453746174696f6e206973206e6f742061637469766560581b60448201526064016103a3565b600680549081906000610ae983612648565b90915550506040805160e08101825282815260208082018d8152338385015260ff8d166060840152608083018c90524260a0840152600160c0840181905260008681526004909352939091208251815590519192839290820190610b4d90826124b9565b506040820151600282018054606085015160ff16600160a01b026001600160a81b03199091166001600160a01b039093169290921791909117905560808201516003820190610b9c90826124b9565b5060a0820151600482015560c0909101516005918201805460ff1916911515919091179055604051610bcf908d9061241a565b9081526020016040518091039020829080600181540180825580915050600190039060005260206000200160009091909190915055336001600160a01b0316827f91db0d3bf4c17b32691346242ee50096b3c089ef4da148c1ab52f46158e839c98d8d4260018e604051610c4795949392919061269f565b60405180910390a3509998505050505050505050565b6000546001600160a01b03163314610c875760405162461bcd60e51b81526004016103a3906123e3565b80600281604051610c98919061241a565b9081526040519081900360200190205460ff16610cc75760405162461bcd60e51b81526004016103a39061266f565b60018083604051610cd8919061241a565b908152604051908190036020018120600501805492151560ff1990931692909217909155610d0790839061241a565b604051908190038120907f242d1df9cae11950415306031e81c7b2c9250010da3f3b8e4065633e1f0ff44590600090a25050565b610d43611dbd565b6006548210610d8c5760405162461bcd60e51b815260206004820152601560248201527414995c1bdc9d08191bd95cc81b9bdd08195e1a5cdd605a1b60448201526064016103a3565b600460008381526020019081526020016000206040518060e001604052908160008201548152602001600182018054610dc490612436565b80601f0160208091040260200160405190810160405280929190818152602001828054610df090612436565b8015610e3d5780601f10610e1257610100808354040283529160200191610e3d565b820191906000526020600020905b815481529060010190602001808311610e2057829003601f168201915b505050918352505060028201546001600160a01b0381166020830152600160a01b900460ff166040820152600382018054606090920191610e7d90612436565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea990612436565b8015610ef65780601f10610ecb57610100808354040283529160200191610ef6565b820191906000526020600020905b815481529060010190602001808311610ed957829003601f168201915b50505091835250506004820154602082015260059091015460ff16151560409091015292915050565b6000546001600160a01b03163314610f495760405162461bcd60e51b81526004016103a3906123e3565b80600281604051610f5a919061241a565b9081526040519081900360200190205460ff16610f895760405162461bcd60e51b81526004016103a39061266f565b6000600183604051610cd8919061241a565b81516020818401810180516005825292820191850191909120919052805482908110610fc657600080fd5b90600052602060002001600091509150505481565b600080546001600160a01b031633146110065760405162461bcd60e51b81526004016103a3906123e3565b84600281604051611017919061241a565b9081526040519081900360200190205460ff166110465760405162461bcd60e51b81526004016103a39061266f565b84600a8160ff1611156110935760405162461bcd60e51b815260206004820152601560248201527405365766572697479206d75737420626520302d313605c1b60448201526064016103a3565b84600081905060058151101580156110ae57506101f4815111155b6110fa5760405162461bcd60e51b815260206004820152601f60248201527f4465736372697074696f6e206d75737420626520352d3530302063686172730060448201526064016103a3565b60018960405161110a919061241a565b9081526040519081900360200190206005015460ff166111645760405162461bcd60e51b815260206004820152601560248201527453746174696f6e206973206e6f742061637469766560581b60448201526064016103a3565b60068054908190600061117683612648565b90915550506040805160e08101825282815260208082018d8152600083850181905260ff8e166060850152608084018d90524260a085015260c0840181905285815260049092529290208151815591519091829160018201906111d990826124b9565b506040820151600282018054606085015160ff16600160a01b026001600160a81b03199091166001600160a01b03909316929092179190911790556080820151600382019061122890826124b9565b5060a0820151600482015560c0909101516005918201805460ff191691151591909117905560405161125b908d9061241a565b9081526040519081900360209081018220805460018101825560009182529190200183905582907f4dd226a66c393f0921377904a091dadb679258579f600d25e17d924342d8947a906112b5908e908e9042908e906126e7565b60405180910390a2509998505050505050505050565b600460205260009081526040902080546001820180549192916112ed90612436565b80601f016020809104026020016040519081016040528092919081815260200182805461131990612436565b80156113665780601f1061133b57610100808354040283529160200191611366565b820191906000526020600020905b81548152906001019060200180831161134957829003601f168201915b50505050600283015460038401805493946001600160a01b03831694600160a01b90930460ff1693509161139990612436565b80601f01602080910402602001604051908101604052809291908181526020018280546113c590612436565b80156114125780601f106113e757610100808354040283529160200191611412565b820191906000526020600020905b8154815290600101906020018083116113f557829003601f168201915b50505050600483015460059093015491929160ff16905087565b60008160028160405161143f919061241a565b9081526040519081900360200190205460ff1661146e5760405162461bcd60e51b81526004016103a39061266f565b60058360405161147e919061241a565b90815260405190819003602001902054915050919050565b6060816002816040516114a9919061241a565b9081526040519081900360200190205460ff166114d85760405162461bcd60e51b81526004016103a39061266f565b60006005846040516114ea919061241a565b908152604080519182900360209081018320805480830285018301909352828452919083018282801561153c57602002820191906000526020600020905b815481526020019060010190808311611528575b505050505090506000815167ffffffffffffffff81111561155f5761155f611e08565b60405190808252806020026020018201604052801561159857816020015b611585611dbd565b81526020019060019003908161157d5790505b50905060005b825181101561177f57600460008483815181106115bd576115bd6125bc565b602002602001015181526020019081526020016000206040518060e0016040529081600082015481526020016001820180546115f890612436565b80601f016020809104026020016040519081016040528092919081815260200182805461162490612436565b80156116715780601f1061164657610100808354040283529160200191611671565b820191906000526020600020905b81548152906001019060200180831161165457829003601f168201915b505050918352505060028201546001600160a01b0381166020830152600160a01b900460ff1660408201526003820180546060909201916116b190612436565b80601f01602080910402602001604051908101604052809291908181526020018280546116dd90612436565b801561172a5780601f106116ff5761010080835404028352916020019161172a565b820191906000526020600020905b81548152906001019060200180831161170d57829003601f168201915b50505091835250506004820154602082015260059091015460ff1615156040909101528251839083908110611761576117616125bc565b6020026020010181905250808061177790612648565b91505061159e565b50949350505050565b6003818154811061179857600080fd5b9060005260206000200160009150905080546117b390612436565b80601f01602080910402602001604051908101604052809291908181526020018280546117df90612436565b801561182c5780601f106118015761010080835404028352916020019161182c565b820191906000526020600020905b81548152906001019060200180831161180f57829003601f168201915b505050505081565b805160208183018101805160018252928201919093012091528054819061185a90612436565b80601f016020809104026020016040519081016040528092919081815260200182805461188690612436565b80156118d35780601f106118a8576101008083540402835291602001916118d3565b820191906000526020600020905b8154815290600101906020018083116118b657829003601f168201915b5050505050908060010180546118e890612436565b80601f016020809104026020016040519081016040528092919081815260200182805461191490612436565b80156119615780601f1061193657610100808354040283529160200191611961565b820191906000526020600020905b81548152906001019060200180831161194457829003601f168201915b50505050509080600201805461197690612436565b80601f01602080910402602001604051908101604052809291908181526020018280546119a290612436565b80156119ef5780601f106119c4576101008083540402835291602001916119ef565b820191906000526020600020905b8154815290600101906020018083116119d257829003601f168201915b505050505090806003018054611a0490612436565b80601f0160208091040260200160405190810160405280929190818152602001828054611a3090612436565b8015611a7d5780601f10611a5257610100808354040283529160200191611a7d565b820191906000526020600020905b815481529060010190602001808311611a6057829003601f168201915b50505050600483015460058401546006909401549293909260ff909116915087565b611ae16040518060e001604052806060815260200160608152602001606081526020016060815260200160008152602001600015158152602001600081525090565b81600281604051611af2919061241a565b9081526040519081900360200190205460ff16611b215760405162461bcd60e51b81526004016103a39061266f565b600183604051611b31919061241a565b90815260200160405180910390206040518060e0016040529081600082018054611b5a90612436565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8690612436565b8015611bd35780601f10611ba857610100808354040283529160200191611bd3565b820191906000526020600020905b815481529060010190602001808311611bb657829003601f168201915b50505050508152602001600182018054611bec90612436565b80601f0160208091040260200160405190810160405280929190818152602001828054611c1890612436565b8015611c655780601f10611c3a57610100808354040283529160200191611c65565b820191906000526020600020905b815481529060010190602001808311611c4857829003601f168201915b50505050508152602001600282018054611c7e90612436565b80601f0160208091040260200160405190810160405280929190818152602001828054611caa90612436565b8015611cf75780601f10611ccc57610100808354040283529160200191611cf7565b820191906000526020600020905b815481529060010190602001808311611cda57829003601f168201915b50505050508152602001600382018054611d1090612436565b80601f0160208091040260200160405190810160405280929190818152602001828054611d3c90612436565b8015611d895780601f10611d5e57610100808354040283529160200191611d89565b820191906000526020600020905b815481529060010190602001808311611d6c57829003601f168201915b505050918352505060048201546020820152600582015460ff16151560408201526006909101546060909101529392505050565b6040518060e00160405280600081526020016060815260200160006001600160a01b03168152602001600060ff16815260200160608152602001600081526020016000151581525090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611e2f57600080fd5b813567ffffffffffffffff80821115611e4a57611e4a611e08565b604051601f8301601f19908116603f01168101908282118183101715611e7257611e72611e08565b81604052838152866020858801011115611e8b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a08688031215611ec357600080fd5b853567ffffffffffffffff80821115611edb57600080fd5b611ee789838a01611e1e565b96506020880135915080821115611efd57600080fd5b611f0989838a01611e1e565b95506040880135915080821115611f1f57600080fd5b611f2b89838a01611e1e565b94506060880135915080821115611f4157600080fd5b50611f4e88828901611e1e565b95989497509295608001359392505050565b60005b83811015611f7b578181015183820152602001611f63565b50506000910152565b60008151808452611f9c816020860160208601611f60565b601f01601f19169290920160200192915050565b6000815160e08452611fc560e0850182611f84565b905060208301518482036020860152611fde8282611f84565b91505060408301518482036040860152611ff88282611f84565b915050606083015184820360608601526120128282611f84565b9150506080830151608085015260a0830151151560a085015260c083015160c08501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561209457603f19888603018452612082858351611fb0565b94509285019290850190600101612066565b5092979650505050505050565b600080600080608085870312156120b757600080fd5b843567ffffffffffffffff808211156120cf57600080fd5b6120db88838901611e1e565b95506020870135915060ff821682146120f357600080fd5b9093506040860135908082111561210957600080fd5b61211588838901611e1e565b9350606087013591508082111561212b57600080fd5b5061213887828801611e1e565b91505092959194509250565b60006020828403121561215657600080fd5b813567ffffffffffffffff81111561216d57600080fd5b61217984828501611e1e565b949350505050565b60006020828403121561219357600080fd5b5035919050565b805182526000602082015160e060208501526121b960e0850182611f84565b905060018060a01b03604084015116604085015260ff6060840151166060850152608083015184820360808601526121f18282611f84565b91505060a083015160a085015260c0830151151560c08501528091505092915050565b602081526000612227602083018461219a565b9392505050565b60006020828403121561224057600080fd5b81356001600160a01b038116811461222757600080fd5b6000806040838503121561226a57600080fd5b823567ffffffffffffffff81111561228157600080fd5b61228d85828601611e1e565b95602094909401359450505050565b87815260e0602082015260006122b560e0830189611f84565b6001600160a01b038816604084015260ff8716606084015282810360808401526122df8187611f84565b60a0840195909552505090151560c09091015295945050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561209457603f1988860301845261233e85835161219a565b94509285019290850190600101612322565b6020815260006122276020830184611f84565b60e08152600061237660e083018a611f84565b8281036020840152612388818a611f84565b9050828103604084015261239c8189611f84565b905082810360608401526123b08188611f84565b6080840196909652505091151560a083015260c090910152949350505050565b6020815260006122276020830184611fb0565b60208082526018908201527f4f6e6c79206f776e65722063616e2063616c6c20746869730000000000000000604082015260600190565b6000825161242c818460208701611f60565b9190910192915050565b600181811c9082168061244a57607f821691505b60208210810361097157634e487b7160e01b600052602260045260246000fd5b601f8211156124b457600081815260208120601f850160051c810160208610156124915750805b601f850160051c820191505b818110156124b05782815560010161249d565b5050505b505050565b815167ffffffffffffffff8111156124d3576124d3611e08565b6124e7816124e18454612436565b8461246a565b602080601f83116001811461251c57600084156125045750858301515b600019600386901b1c1916600185901b1785556124b0565b600085815260208120601f198616915b8281101561254b5788860151825594840194600190910190840161252c565b50858210156125695787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60608152600061258c6060830186611f84565b828103602084015261259e8186611f84565b905082810360408401526125b28185611f84565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b60008083546125e081612436565b600182811680156125f8576001811461260d5761263c565b60ff198416875282151583028701945061263c565b8760005260208060002060005b858110156126335781548a82015290840190820161261a565b50505082870194505b50929695505050505050565b60006001820161266857634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526016908201527514dd185d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60521b604082015260600190565b60a0815260006126b260a0830188611f84565b60ff87166020840152856040840152841515606084015282810360808401526126db8185611f84565b98975050505050505050565b6080815260006126fa6080830187611f84565b60ff86166020840152846040840152828103606084015261271b8185611f84565b97965050505050505056fea2646970667358221220e51bacd5ab1d8b1fd1b3c2ed852828d7470861fb26a9c440205ce41d8c79bbc364736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c80637450b09a116100b8578063cea30d481161007c578063cea30d48146102c0578063cef6f86b146102d3578063dbf0fc68146102f3578063e391daf914610313578063efd64c9614610333578063fe9ba20a1461035957600080fd5b80637450b09a1461023657806377b0594314610249578063803549c01461025c5780638da5cb5b1461026f578063c942adf71461029a57600080fd5b80634dcf743b116100ff5780634dcf743b146101a85780634e7f9b19146101b057806351c074e9146101d05780636258f1c11461020e578063656f9d061461021657600080fd5b80631265b2541461013c578063185c6f84146101515780632118f9c41461016d578063288d0c56146101825780634cfec6bb14610195575b600080fd5b61014f61014a366004611eab565b610379565b005b61015a60065481565b6040519081526020015b60405180910390f35b6101756105ea565b604051610164919061203f565b61015a6101903660046120a1565b610977565b61014f6101a3366004612144565b610c5d565b60035461015a565b6101c36101be366004612181565b610d3b565b6040516101649190612214565b6101fe6101de366004612144565b805160208183018101805160028252928201919093012091525460ff1681565b6040519015158152602001610164565b60065461015a565b61015a61022436600461222e565b60086020526000908152604090205481565b61014f610244366004612144565b610f1f565b61015a610257366004612257565b610f9b565b61015a61026a3660046120a1565b610fdb565b600054610282906001600160a01b031681565b6040516001600160a01b039091168152602001610164565b6102ad6102a8366004612181565b6112cb565b604051610164979695949392919061229c565b61015a6102ce366004612144565b61142c565b6102e66102e1366004612144565b611496565b60405161016491906122fb565b61015a61030136600461222e565b60076020526000908152604090205481565b610326610321366004612181565b611788565b6040516101649190612350565b610346610341366004612144565b611834565b6040516101649796959493929190612363565b61036c610367366004612144565b611a9f565b60405161016491906123d0565b6000546001600160a01b031633146103ac5760405162461bcd60e51b81526004016103a3906123e3565b60405180910390fd5b6002856040516103bc919061241a565b9081526040519081900360200190205460ff16156104155760405162461bcd60e51b815260206004820152601660248201527553746174696f6e20616c72656164792065786973747360501b60448201526064016103a3565b60008551116104665760405162461bcd60e51b815260206004820152601a60248201527f53746174696f6e2049442063616e6e6f7420626520656d70747900000000000060448201526064016103a3565b6040518060e00160405280868152602001858152602001848152602001838152602001828152602001600115158152602001428152506001866040516104ac919061241a565b908152604051908190036020019020815181906104c990826124b9565b50602082015160018201906104de90826124b9565b50604082015160028201906104f390826124b9565b506060820151600382019061050890826124b9565b506080820151600482015560a082015160058201805460ff191691151591909117905560c09091015160069091015560405160019060029061054b90889061241a565b908152604051908190036020019020805491151560ff19909216919091179055600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b016105a786826124b9565b507fdaf69adeca2af28a81a080baaebb673a8432cc079f90a21c3249abce592be4898585856040516105db93929190612579565b60405180910390a15050505050565b60035460609060009067ffffffffffffffff81111561060b5761060b611e08565b60405190808252806020026020018201604052801561067e57816020015b61066b6040518060e001604052806060815260200160608152602001606081526020016060815260200160008152602001600015158152602001600081525090565b8152602001906001900390816106295790505b50905060005b600354811015610971576001600382815481106106a3576106a36125bc565b906000526020600020016040516106ba91906125d2565b90815260200160405180910390206040518060e00160405290816000820180546106e390612436565b80601f016020809104026020016040519081016040528092919081815260200182805461070f90612436565b801561075c5780601f106107315761010080835404028352916020019161075c565b820191906000526020600020905b81548152906001019060200180831161073f57829003601f168201915b5050505050815260200160018201805461077590612436565b80601f01602080910402602001604051908101604052809291908181526020018280546107a190612436565b80156107ee5780601f106107c3576101008083540402835291602001916107ee565b820191906000526020600020905b8154815290600101906020018083116107d157829003601f168201915b5050505050815260200160028201805461080790612436565b80601f016020809104026020016040519081016040528092919081815260200182805461083390612436565b80156108805780601f1061085557610100808354040283529160200191610880565b820191906000526020600020905b81548152906001019060200180831161086357829003601f168201915b5050505050815260200160038201805461089990612436565b80601f01602080910402602001604051908101604052809291908181526020018280546108c590612436565b80156109125780601f106108e757610100808354040283529160200191610912565b820191906000526020600020905b8154815290600101906020018083116108f557829003601f168201915b505050918352505060048201546020820152600582015460ff16151560408201526006909101546060909101528251839083908110610953576109536125bc565b6020026020010181905250808061096990612648565b915050610684565b50919050565b60008460028160405161098a919061241a565b9081526040519081900360200190205460ff166109b95760405162461bcd60e51b81526004016103a39061266f565b84600a8160ff161115610a065760405162461bcd60e51b815260206004820152601560248201527405365766572697479206d75737420626520302d313605c1b60448201526064016103a3565b8460008190506005815110158015610a2157506101f4815111155b610a6d5760405162461bcd60e51b815260206004820152601f60248201527f4465736372697074696f6e206d75737420626520352d3530302063686172730060448201526064016103a3565b600189604051610a7d919061241a565b9081526040519081900360200190206005015460ff16610ad75760405162461bcd60e51b815260206004820152601560248201527453746174696f6e206973206e6f742061637469766560581b60448201526064016103a3565b600680549081906000610ae983612648565b90915550506040805160e08101825282815260208082018d8152338385015260ff8d166060840152608083018c90524260a0840152600160c0840181905260008681526004909352939091208251815590519192839290820190610b4d90826124b9565b506040820151600282018054606085015160ff16600160a01b026001600160a81b03199091166001600160a01b039093169290921791909117905560808201516003820190610b9c90826124b9565b5060a0820151600482015560c0909101516005918201805460ff1916911515919091179055604051610bcf908d9061241a565b9081526020016040518091039020829080600181540180825580915050600190039060005260206000200160009091909190915055336001600160a01b0316827f91db0d3bf4c17b32691346242ee50096b3c089ef4da148c1ab52f46158e839c98d8d4260018e604051610c4795949392919061269f565b60405180910390a3509998505050505050505050565b6000546001600160a01b03163314610c875760405162461bcd60e51b81526004016103a3906123e3565b80600281604051610c98919061241a565b9081526040519081900360200190205460ff16610cc75760405162461bcd60e51b81526004016103a39061266f565b60018083604051610cd8919061241a565b908152604051908190036020018120600501805492151560ff1990931692909217909155610d0790839061241a565b604051908190038120907f242d1df9cae11950415306031e81c7b2c9250010da3f3b8e4065633e1f0ff44590600090a25050565b610d43611dbd565b6006548210610d8c5760405162461bcd60e51b815260206004820152601560248201527414995c1bdc9d08191bd95cc81b9bdd08195e1a5cdd605a1b60448201526064016103a3565b600460008381526020019081526020016000206040518060e001604052908160008201548152602001600182018054610dc490612436565b80601f0160208091040260200160405190810160405280929190818152602001828054610df090612436565b8015610e3d5780601f10610e1257610100808354040283529160200191610e3d565b820191906000526020600020905b815481529060010190602001808311610e2057829003601f168201915b505050918352505060028201546001600160a01b0381166020830152600160a01b900460ff166040820152600382018054606090920191610e7d90612436565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea990612436565b8015610ef65780601f10610ecb57610100808354040283529160200191610ef6565b820191906000526020600020905b815481529060010190602001808311610ed957829003601f168201915b50505091835250506004820154602082015260059091015460ff16151560409091015292915050565b6000546001600160a01b03163314610f495760405162461bcd60e51b81526004016103a3906123e3565b80600281604051610f5a919061241a565b9081526040519081900360200190205460ff16610f895760405162461bcd60e51b81526004016103a39061266f565b6000600183604051610cd8919061241a565b81516020818401810180516005825292820191850191909120919052805482908110610fc657600080fd5b90600052602060002001600091509150505481565b600080546001600160a01b031633146110065760405162461bcd60e51b81526004016103a3906123e3565b84600281604051611017919061241a565b9081526040519081900360200190205460ff166110465760405162461bcd60e51b81526004016103a39061266f565b84600a8160ff1611156110935760405162461bcd60e51b815260206004820152601560248201527405365766572697479206d75737420626520302d313605c1b60448201526064016103a3565b84600081905060058151101580156110ae57506101f4815111155b6110fa5760405162461bcd60e51b815260206004820152601f60248201527f4465736372697074696f6e206d75737420626520352d3530302063686172730060448201526064016103a3565b60018960405161110a919061241a565b9081526040519081900360200190206005015460ff166111645760405162461bcd60e51b815260206004820152601560248201527453746174696f6e206973206e6f742061637469766560581b60448201526064016103a3565b60068054908190600061117683612648565b90915550506040805160e08101825282815260208082018d8152600083850181905260ff8e166060850152608084018d90524260a085015260c0840181905285815260049092529290208151815591519091829160018201906111d990826124b9565b506040820151600282018054606085015160ff16600160a01b026001600160a81b03199091166001600160a01b03909316929092179190911790556080820151600382019061122890826124b9565b5060a0820151600482015560c0909101516005918201805460ff191691151591909117905560405161125b908d9061241a565b9081526040519081900360209081018220805460018101825560009182529190200183905582907f4dd226a66c393f0921377904a091dadb679258579f600d25e17d924342d8947a906112b5908e908e9042908e906126e7565b60405180910390a2509998505050505050505050565b600460205260009081526040902080546001820180549192916112ed90612436565b80601f016020809104026020016040519081016040528092919081815260200182805461131990612436565b80156113665780601f1061133b57610100808354040283529160200191611366565b820191906000526020600020905b81548152906001019060200180831161134957829003601f168201915b50505050600283015460038401805493946001600160a01b03831694600160a01b90930460ff1693509161139990612436565b80601f01602080910402602001604051908101604052809291908181526020018280546113c590612436565b80156114125780601f106113e757610100808354040283529160200191611412565b820191906000526020600020905b8154815290600101906020018083116113f557829003601f168201915b50505050600483015460059093015491929160ff16905087565b60008160028160405161143f919061241a565b9081526040519081900360200190205460ff1661146e5760405162461bcd60e51b81526004016103a39061266f565b60058360405161147e919061241a565b90815260405190819003602001902054915050919050565b6060816002816040516114a9919061241a565b9081526040519081900360200190205460ff166114d85760405162461bcd60e51b81526004016103a39061266f565b60006005846040516114ea919061241a565b908152604080519182900360209081018320805480830285018301909352828452919083018282801561153c57602002820191906000526020600020905b815481526020019060010190808311611528575b505050505090506000815167ffffffffffffffff81111561155f5761155f611e08565b60405190808252806020026020018201604052801561159857816020015b611585611dbd565b81526020019060019003908161157d5790505b50905060005b825181101561177f57600460008483815181106115bd576115bd6125bc565b602002602001015181526020019081526020016000206040518060e0016040529081600082015481526020016001820180546115f890612436565b80601f016020809104026020016040519081016040528092919081815260200182805461162490612436565b80156116715780601f1061164657610100808354040283529160200191611671565b820191906000526020600020905b81548152906001019060200180831161165457829003601f168201915b505050918352505060028201546001600160a01b0381166020830152600160a01b900460ff1660408201526003820180546060909201916116b190612436565b80601f01602080910402602001604051908101604052809291908181526020018280546116dd90612436565b801561172a5780601f106116ff5761010080835404028352916020019161172a565b820191906000526020600020905b81548152906001019060200180831161170d57829003601f168201915b50505091835250506004820154602082015260059091015460ff1615156040909101528251839083908110611761576117616125bc565b6020026020010181905250808061177790612648565b91505061159e565b50949350505050565b6003818154811061179857600080fd5b9060005260206000200160009150905080546117b390612436565b80601f01602080910402602001604051908101604052809291908181526020018280546117df90612436565b801561182c5780601f106118015761010080835404028352916020019161182c565b820191906000526020600020905b81548152906001019060200180831161180f57829003601f168201915b505050505081565b805160208183018101805160018252928201919093012091528054819061185a90612436565b80601f016020809104026020016040519081016040528092919081815260200182805461188690612436565b80156118d35780601f106118a8576101008083540402835291602001916118d3565b820191906000526020600020905b8154815290600101906020018083116118b657829003601f168201915b5050505050908060010180546118e890612436565b80601f016020809104026020016040519081016040528092919081815260200182805461191490612436565b80156119615780601f1061193657610100808354040283529160200191611961565b820191906000526020600020905b81548152906001019060200180831161194457829003601f168201915b50505050509080600201805461197690612436565b80601f01602080910402602001604051908101604052809291908181526020018280546119a290612436565b80156119ef5780601f106119c4576101008083540402835291602001916119ef565b820191906000526020600020905b8154815290600101906020018083116119d257829003601f168201915b505050505090806003018054611a0490612436565b80601f0160208091040260200160405190810160405280929190818152602001828054611a3090612436565b8015611a7d5780601f10611a5257610100808354040283529160200191611a7d565b820191906000526020600020905b815481529060010190602001808311611a6057829003601f168201915b50505050600483015460058401546006909401549293909260ff909116915087565b611ae16040518060e001604052806060815260200160608152602001606081526020016060815260200160008152602001600015158152602001600081525090565b81600281604051611af2919061241a565b9081526040519081900360200190205460ff16611b215760405162461bcd60e51b81526004016103a39061266f565b600183604051611b31919061241a565b90815260200160405180910390206040518060e0016040529081600082018054611b5a90612436565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8690612436565b8015611bd35780601f10611ba857610100808354040283529160200191611bd3565b820191906000526020600020905b815481529060010190602001808311611bb657829003601f168201915b50505050508152602001600182018054611bec90612436565b80601f0160208091040260200160405190810160405280929190818152602001828054611c1890612436565b8015611c655780601f10611c3a57610100808354040283529160200191611c65565b820191906000526020600020905b815481529060010190602001808311611c4857829003601f168201915b50505050508152602001600282018054611c7e90612436565b80601f0160208091040260200160405190810160405280929190818152602001828054611caa90612436565b8015611cf75780601f10611ccc57610100808354040283529160200191611cf7565b820191906000526020600020905b815481529060010190602001808311611cda57829003601f168201915b50505050508152602001600382018054611d1090612436565b80601f0160208091040260200160405190810160405280929190818152602001828054611d3c90612436565b8015611d895780601f10611d5e57610100808354040283529160200191611d89565b820191906000526020600020905b815481529060010190602001808311611d6c57829003601f168201915b505050918352505060048201546020820152600582015460ff16151560408201526006909101546060909101529392505050565b6040518060e00160405280600081526020016060815260200160006001600160a01b03168152602001600060ff16815260200160608152602001600081526020016000151581525090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611e2f57600080fd5b813567ffffffffffffffff80821115611e4a57611e4a611e08565b604051601f8301601f19908116603f01168101908282118183101715611e7257611e72611e08565b81604052838152866020858801011115611e8b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a08688031215611ec357600080fd5b853567ffffffffffffffff80821115611edb57600080fd5b611ee789838a01611e1e565b96506020880135915080821115611efd57600080fd5b611f0989838a01611e1e565b95506040880135915080821115611f1f57600080fd5b611f2b89838a01611e1e565b94506060880135915080821115611f4157600080fd5b50611f4e88828901611e1e565b95989497509295608001359392505050565b60005b83811015611f7b578181015183820152602001611f63565b50506000910152565b60008151808452611f9c816020860160208601611f60565b601f01601f19169290920160200192915050565b6000815160e08452611fc560e0850182611f84565b905060208301518482036020860152611fde8282611f84565b91505060408301518482036040860152611ff88282611f84565b915050606083015184820360608601526120128282611f84565b9150506080830151608085015260a0830151151560a085015260c083015160c08501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561209457603f19888603018452612082858351611fb0565b94509285019290850190600101612066565b5092979650505050505050565b600080600080608085870312156120b757600080fd5b843567ffffffffffffffff808211156120cf57600080fd5b6120db88838901611e1e565b95506020870135915060ff821682146120f357600080fd5b9093506040860135908082111561210957600080fd5b61211588838901611e1e565b9350606087013591508082111561212b57600080fd5b5061213887828801611e1e565b91505092959194509250565b60006020828403121561215657600080fd5b813567ffffffffffffffff81111561216d57600080fd5b61217984828501611e1e565b949350505050565b60006020828403121561219357600080fd5b5035919050565b805182526000602082015160e060208501526121b960e0850182611f84565b905060018060a01b03604084015116604085015260ff6060840151166060850152608083015184820360808601526121f18282611f84565b91505060a083015160a085015260c0830151151560c08501528091505092915050565b602081526000612227602083018461219a565b9392505050565b60006020828403121561224057600080fd5b81356001600160a01b038116811461222757600080fd5b6000806040838503121561226a57600080fd5b823567ffffffffffffffff81111561228157600080fd5b61228d85828601611e1e565b95602094909401359450505050565b87815260e0602082015260006122b560e0830189611f84565b6001600160a01b038816604084015260ff8716606084015282810360808401526122df8187611f84565b60a0840195909552505090151560c09091015295945050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561209457603f1988860301845261233e85835161219a565b94509285019290850190600101612322565b6020815260006122276020830184611f84565b60e08152600061237660e083018a611f84565b8281036020840152612388818a611f84565b9050828103604084015261239c8189611f84565b905082810360608401526123b08188611f84565b6080840196909652505091151560a083015260c090910152949350505050565b6020815260006122276020830184611fb0565b60208082526018908201527f4f6e6c79206f776e65722063616e2063616c6c20746869730000000000000000604082015260600190565b6000825161242c818460208701611f60565b9190910192915050565b600181811c9082168061244a57607f821691505b60208210810361097157634e487b7160e01b600052602260045260246000fd5b601f8211156124b457600081815260208120601f850160051c810160208610156124915750805b601f850160051c820191505b818110156124b05782815560010161249d565b5050505b505050565b815167ffffffffffffffff8111156124d3576124d3611e08565b6124e7816124e18454612436565b8461246a565b602080601f83116001811461251c57600084156125045750858301515b600019600386901b1c1916600185901b1785556124b0565b600085815260208120601f198616915b8281101561254b5788860151825594840194600190910190840161252c565b50858210156125695787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60608152600061258c6060830186611f84565b828103602084015261259e8186611f84565b905082810360408401526125b28185611f84565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b60008083546125e081612436565b600182811680156125f8576001811461260d5761263c565b60ff198416875282151583028701945061263c565b8760005260208060002060005b858110156126335781548a82015290840190820161261a565b50505082870194505b50929695505050505050565b60006001820161266857634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526016908201527514dd185d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60521b604082015260600190565b60a0815260006126b260a0830188611f84565b60ff87166020840152856040840152841515606084015282810360808401526126db8185611f84565b98975050505050505050565b6080815260006126fa6080830187611f84565b60ff86166020840152846040840152828103606084015261271b8185611f84565b97965050505050505056fea2646970667358221220e51bacd5ab1d8b1fd1b3c2ed852828d7470861fb26a9c440205ce41d8c79bbc364736f6c63430008140033",
  "devdoc": {
    "details": "Designed for The Graph indexing and cross-metro analysis",
    "kind": "dev",
    "methods": {
      "createStation(string,string,string,string,uint256)": {
        "params": {
          "_lineOrder": "Order on the primary line for visualization",
          "_lines": "Comma-separated line codes (e.g., \"A,B,C\")",
          "_metro": "Metro system identifier (e.g., \"rome\")",
          "_name": "Human-readable station name",
          "_stationId": "Unique identifier (e.g., \"termini-rome\")"
        }
      },
      "submitAnonymousReport(string,uint8,string,string)": {
        "details": "Only owner (backend relayer) can call this for anonymous reportsThis is for guest reports where you (the owner) pay the gas",
        "params": {
          "_cid": "IPFS CID of the report",
          "_description": "Report description",
          "_severity": "Severity level 0-10",
          "_stationId": "Station identifier"
        }
      },
      "submitVerifiedReport(string,uint8,string,string)": {
        "params": {
          "_cid": "IPFS CID of the report",
          "_description": "Report description",
          "_severity": "Severity level 0-10",
          "_stationId": "Station identifier"
        }
      }
    },
    "title": "CrimeRegistry",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "activateStation(string)": {
        "notice": "Reactivate a station"
      },
      "createStation(string,string,string,string,uint256)": {
        "notice": "Create a new metro station"
      },
      "deactivateStation(string)": {
        "notice": "Deactivate a station (soft delete)"
      },
      "getAllStations()": {
        "notice": "Get all stations"
      },
      "getReport(uint256)": {
        "notice": "Get a specific report"
      },
      "getStation(string)": {
        "notice": "Get a specific station"
      },
      "getStationCount()": {
        "notice": "Get total number of stations"
      },
      "getStationReportCount(string)": {
        "notice": "Get number of reports for a station"
      },
      "getStationReports(string)": {
        "notice": "Get all reports for a station"
      },
      "getTotalReportCount()": {
        "notice": "Get total number of reports"
      },
      "submitAnonymousReport(string,uint8,string,string)": {
        "notice": "Submit an anonymous crime report (backend/relayer pays gas)"
      },
      "submitVerifiedReport(string,uint8,string,string)": {
        "notice": "Submit a verified crime report (user pays gas, signed by reporter)"
      }
    },
    "notice": "Smart contract for recording and managing crime reports across metro systems",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 34,
        "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 39,
        "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
        "label": "stations",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Station)17_storage)"
      },
      {
        "astId": 43,
        "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
        "label": "stationExists",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 46,
        "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
        "label": "stationIds",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 51,
        "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
        "label": "reports",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(CrimeReport)32_storage)"
      },
      {
        "astId": 56,
        "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
        "label": "stationReports",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 58,
        "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
        "label": "reportCount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 62,
        "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
        "label": "lastReportTime",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 66,
        "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
        "label": "reportCountToday",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Station)17_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct CrimeRegistry.Station)",
        "numberOfBytes": "32",
        "value": "t_struct(Station)17_storage"
      },
      "t_mapping(t_uint256,t_struct(CrimeReport)32_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CrimeRegistry.CrimeReport)",
        "numberOfBytes": "32",
        "value": "t_struct(CrimeReport)32_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(CrimeReport)32_storage": {
        "encoding": "inplace",
        "label": "struct CrimeRegistry.CrimeReport",
        "members": [
          {
            "astId": 19,
            "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 21,
            "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
            "label": "stationId",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 23,
            "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
            "label": "reporter",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 25,
            "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
            "label": "severity",
            "offset": 20,
            "slot": "2",
            "type": "t_uint8"
          },
          {
            "astId": 27,
            "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 29,
            "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
            "label": "timestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 31,
            "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
            "label": "verified",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Station)17_storage": {
        "encoding": "inplace",
        "label": "struct CrimeRegistry.Station",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 6,
            "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
            "label": "metro",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 10,
            "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
            "label": "lines",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 12,
            "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
            "label": "lineOrder",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 14,
            "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
            "label": "active",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 16,
            "contract": "contracts/CrimeRegistry.sol:CrimeRegistry",
            "label": "createdAt",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}